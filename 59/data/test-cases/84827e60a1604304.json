{
  "uid" : "84827e60a1604304",
  "name" : "Checking the clickability of the Start button.",
  "fullName" : "tests.main_page_test.TestMainPage#test_mp_9_checking_the_clickability_of_the_start_button",
  "historyId" : "0e08397efd66b419d47750e7349b139e",
  "time" : {
    "start" : 1728610990513,
    "stop" : 1728610990513,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5632ac5a202a <unknown>\n#1 0x5632ac2885e0 <unknown>\n#2 0x5632ac2807eb <unknown>\n#3 0x5632ac270a09 <unknown>\n#4 0x5632ac272744 <unknown>\n#5 0x5632ac270cbd <unknown>\n#6 0x5632ac27052f <unknown>\n#7 0x5632ac270422 <unknown>\n#8 0x5632ac26e493 <unknown>\n#9 0x5632ac26eada <unknown>\n#10 0x5632ac28af41 <unknown>\n#11 0x5632ac31c8c5 <unknown>\n#12 0x5632ac2fcb22 <unknown>\n#13 0x5632ac31bd7d <unknown>\n#14 0x5632ac2fc8c3 <unknown>\n#15 0x5632ac2ca6b3 <unknown>\n#16 0x5632ac2cb68e <unknown>\n#17 0x5632ac56ca2b <unknown>\n#18 0x5632ac5709b1 <unknown>\n#19 0x5632ac559225 <unknown>\n#20 0x5632ac571532 <unknown>\n#21 0x5632ac53e38f <unknown>\n#22 0x5632ac590f28 <unknown>\n#23 0x5632ac5910f3 <unknown>\n#24 0x5632ac5a0e7c <unknown>\n#25 0x7f35e2894ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c838a74d24e04b1e5e97ad83ca30fa6c\")>\n\n    @pytest.fixture()\n    @allure.step(f'Open page: {MainPageLinks.URL_MAIN_PAGE}')\n    def main_page_open(driver):\n>       driver.get(MainPageLinks.URL_MAIN_PAGE)\n\ntests/conftest.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3bf89ec200>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x5632ac5910f3 \\\\u003Cunknown>\\\\n#24 0x5632ac5a0e7c \\\\u003Cunknown>\\\\n#25 0x7f35e2894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x5632ac5a202a <unknown>\nE       #1 0x5632ac2885e0 <unknown>\nE       #2 0x5632ac2807eb <unknown>\nE       #3 0x5632ac270a09 <unknown>\nE       #4 0x5632ac272744 <unknown>\nE       #5 0x5632ac270cbd <unknown>\nE       #6 0x5632ac27052f <unknown>\nE       #7 0x5632ac270422 <unknown>\nE       #8 0x5632ac26e493 <unknown>\nE       #9 0x5632ac26eada <unknown>\nE       #10 0x5632ac28af41 <unknown>\nE       #11 0x5632ac31c8c5 <unknown>\nE       #12 0x5632ac2fcb22 <unknown>\nE       #13 0x5632ac31bd7d <unknown>\nE       #14 0x5632ac2fc8c3 <unknown>\nE       #15 0x5632ac2ca6b3 <unknown>\nE       #16 0x5632ac2cb68e <unknown>\nE       #17 0x5632ac56ca2b <unknown>\nE       #18 0x5632ac5709b1 <unknown>\nE       #19 0x5632ac559225 <unknown>\nE       #20 0x5632ac571532 <unknown>\nE       #21 0x5632ac53e38f <unknown>\nE       #22 0x5632ac590f28 <unknown>\nE       #23 0x5632ac5910f3 <unknown>\nE       #24 0x5632ac5a0e7c <unknown>\nE       #25 0x7f35e2894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1728610991288,
      "stop" : 1728610991714,
      "duration" : 426
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5632ac5a202a <unknown>\n#1 0x5632ac2885e0 <unknown>\n#2 0x5632ac2807eb <unknown>\n#3 0x5632ac270a09 <unknown>\n#4 0x5632ac272744 <unknown>\n#5 0x5632ac270cbd <unknown>\n#6 0x5632ac27052f <unknown>\n#7 0x5632ac270422 <unknown>\n#8 0x5632ac26e493 <unknown>\n#9 0x5632ac26eada <unknown>\n#10 0x5632ac28af41 <unknown>\n#11 0x5632ac31c8c5 <unknown>\n#12 0x5632ac2fcb22 <unknown>\n#13 0x5632ac31bd7d <unknown>\n#14 0x5632ac2fc8c3 <unknown>\n#15 0x5632ac2ca6b3 <unknown>\n#16 0x5632ac2cb68e <unknown>\n#17 0x5632ac56ca2b <unknown>\n#18 0x5632ac5709b1 <unknown>\n#19 0x5632ac559225 <unknown>\n#20 0x5632ac571532 <unknown>\n#21 0x5632ac53e38f <unknown>\n#22 0x5632ac590f28 <unknown>\n#23 0x5632ac5910f3 <unknown>\n#24 0x5632ac5a0e7c <unknown>\n#25 0x7f35e2894ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 22, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/",
      "time" : {
        "start" : 1728610991288,
        "stop" : 1728610991713,
        "duration" : 425
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5632ac5a202a <unknown>\n#1 0x5632ac2885e0 <unknown>\n#2 0x5632ac2807eb <unknown>\n#3 0x5632ac270a09 <unknown>\n#4 0x5632ac272744 <unknown>\n#5 0x5632ac270cbd <unknown>\n#6 0x5632ac27052f <unknown>\n#7 0x5632ac270422 <unknown>\n#8 0x5632ac26e493 <unknown>\n#9 0x5632ac26eada <unknown>\n#10 0x5632ac28af41 <unknown>\n#11 0x5632ac31c8c5 <unknown>\n#12 0x5632ac2fcb22 <unknown>\n#13 0x5632ac31bd7d <unknown>\n#14 0x5632ac2fc8c3 <unknown>\n#15 0x5632ac2ca6b3 <unknown>\n#16 0x5632ac2cb68e <unknown>\n#17 0x5632ac56ca2b <unknown>\n#18 0x5632ac5709b1 <unknown>\n#19 0x5632ac559225 <unknown>\n#20 0x5632ac571532 <unknown>\n#21 0x5632ac53e38f <unknown>\n#22 0x5632ac590f28 <unknown>\n#23 0x5632ac5910f3 <unknown>\n#24 0x5632ac5a0e7c <unknown>\n#25 0x7f35e2894ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 22, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c838a74d24e04b1e5e97ad83ca30fa6c\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1728610990513,
      "stop" : 1728610991288,
      "duration" : 775
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1728610900918,
      "stop" : 1728610900918,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1728610991749,
      "stop" : 1728610991811,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Main Page."
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPage"
  }, {
    "name" : "host",
    "value" : "fv-az740-570"
  }, {
    "name" : "thread",
    "value" : "2375-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 58,
        "unknown" : 0,
        "total" : 59
      },
      "items" : [ {
        "uid" : "a6756443e960c76e",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/58//#testresult/a6756443e960c76e",
        "status" : "passed",
        "time" : {
          "start" : 1728524881710,
          "stop" : 1728524881838,
          "duration" : 128
        }
      }, {
        "uid" : "52b8d58e250d7079",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/57//#testresult/52b8d58e250d7079",
        "status" : "passed",
        "time" : {
          "start" : 1728438555724,
          "stop" : 1728438555839,
          "duration" : 115
        }
      }, {
        "uid" : "8a76551298c59fed",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/56//#testresult/8a76551298c59fed",
        "status" : "passed",
        "time" : {
          "start" : 1728352132645,
          "stop" : 1728352132745,
          "duration" : 100
        }
      }, {
        "uid" : "969fbf804c5fddac",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/55//#testresult/969fbf804c5fddac",
        "status" : "passed",
        "time" : {
          "start" : 1728266474389,
          "stop" : 1728266474477,
          "duration" : 88
        }
      }, {
        "uid" : "e4cad85b82a63922",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/54//#testresult/e4cad85b82a63922",
        "status" : "passed",
        "time" : {
          "start" : 1728179677239,
          "stop" : 1728179677333,
          "duration" : 94
        }
      }, {
        "uid" : "3ad7669875a7a81c",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/53//#testresult/3ad7669875a7a81c",
        "status" : "passed",
        "time" : {
          "start" : 1728092902369,
          "stop" : 1728092902456,
          "duration" : 87
        }
      }, {
        "uid" : "f153005356cef52d",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/52//#testresult/f153005356cef52d",
        "status" : "passed",
        "time" : {
          "start" : 1728006604368,
          "stop" : 1728006604456,
          "duration" : 88
        }
      }, {
        "uid" : "8bc5217f0a7e810d",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/51//#testresult/8bc5217f0a7e810d",
        "status" : "passed",
        "time" : {
          "start" : 1727920238316,
          "stop" : 1727920238422,
          "duration" : 106
        }
      }, {
        "uid" : "254bf9cb6c3b5175",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/50//#testresult/254bf9cb6c3b5175",
        "status" : "passed",
        "time" : {
          "start" : 1727833688139,
          "stop" : 1727833688229,
          "duration" : 90
        }
      }, {
        "uid" : "666df47b1d103fc0",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/49//#testresult/666df47b1d103fc0",
        "status" : "passed",
        "time" : {
          "start" : 1727747812631,
          "stop" : 1727747812720,
          "duration" : 89
        }
      }, {
        "uid" : "64abdd6542b77f94",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/48//#testresult/64abdd6542b77f94",
        "status" : "passed",
        "time" : {
          "start" : 1727661095503,
          "stop" : 1727661095595,
          "duration" : 92
        }
      }, {
        "uid" : "11432e2fd6314402",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/47//#testresult/11432e2fd6314402",
        "status" : "passed",
        "time" : {
          "start" : 1727574917489,
          "stop" : 1727574917578,
          "duration" : 89
        }
      }, {
        "uid" : "bd3d0fa1b9e16e8f",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/46//#testresult/bd3d0fa1b9e16e8f",
        "status" : "passed",
        "time" : {
          "start" : 1727488145194,
          "stop" : 1727488145281,
          "duration" : 87
        }
      }, {
        "uid" : "ec35a740b3bcc5e7",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/45//#testresult/ec35a740b3bcc5e7",
        "status" : "passed",
        "time" : {
          "start" : 1727401857540,
          "stop" : 1727401857627,
          "duration" : 87
        }
      }, {
        "uid" : "15954417d7cd617d",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/44//#testresult/15954417d7cd617d",
        "status" : "passed",
        "time" : {
          "start" : 1727315342198,
          "stop" : 1727315342287,
          "duration" : 89
        }
      }, {
        "uid" : "c0cc9ead90d8cc57",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/43//#testresult/c0cc9ead90d8cc57",
        "status" : "passed",
        "time" : {
          "start" : 1727228988496,
          "stop" : 1727228988581,
          "duration" : 85
        }
      }, {
        "uid" : "47989af1d295063c",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/42//#testresult/47989af1d295063c",
        "status" : "passed",
        "time" : {
          "start" : 1727142538656,
          "stop" : 1727142538764,
          "duration" : 108
        }
      }, {
        "uid" : "f587c3ddb199017",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/41//#testresult/f587c3ddb199017",
        "status" : "passed",
        "time" : {
          "start" : 1727056065505,
          "stop" : 1727056065591,
          "duration" : 86
        }
      }, {
        "uid" : "78386f0b7837153d",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/40//#testresult/78386f0b7837153d",
        "status" : "passed",
        "time" : {
          "start" : 1726969994420,
          "stop" : 1726969994506,
          "duration" : 86
        }
      }, {
        "uid" : "279e8544e5710764",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/39//#testresult/279e8544e5710764",
        "status" : "passed",
        "time" : {
          "start" : 1726882995040,
          "stop" : 1726882995133,
          "duration" : 93
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "84827e60a1604304.json",
  "parameterValues" : [ ]
}