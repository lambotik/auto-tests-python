{
  "uid" : "f9a84d93ea44fed1",
  "name" : "Verify values of names in specialist cards in the grid",
  "fullName" : "tests.specialists_page_test.TestSpecialistCardsText#test_sp_03_02_verify_name_values_in_cards",
  "historyId" : "9a8ce09d3a2bb8b95335bd160786c1e0",
  "time" : {
    "start" : 1716080829072,
    "stop" : 1716080829092,
    "duration" : 20
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: The names in specialist cards do not match the valid values\nassert ['Login'] in [['Гарбарук Екатерина Сергеевна', 'Прошина Любовь Александровна', 'Березкина Ксения Сергеевна', 'Метельская Наталья Николаевна', 'Королева Инна Васильевна', 'Юлия Кибалова', ...], ['Ekaterina Garbaruk', 'Lubov Proshina', 'Ksenia Berezkina', 'Natalia Metelskaya', 'Inna Koroleva', 'Yulia Kibalova', ...]]\n +  where [['Гарбарук Екатерина Сергеевна', 'Прошина Любовь Александровна', 'Березкина Ксения Сергеевна', 'Метельская Наталья Николаевна', 'Королева Инна Васильевна', 'Юлия Кибалова', ...], ['Ekaterina Garbaruk', 'Lubov Proshina', 'Ksenia Berezkina', 'Natalia Metelskaya', 'Inna Koroleva', 'Yulia Kibalova', ...]] = SpecialistsPageData.specialists_names",
  "statusTrace" : "self = <tests.specialists_page_test.TestSpecialistsPage.TestSpecialistCardsText object at 0x7fdb4ba20e60>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c66a9497537141d9a42747adef328876\")>\nspecialists_page_open = None\n\n    @allure.title(\"Verify values of names in specialist cards in the grid\")\n    def test_sp_03_02_verify_name_values_in_cards(self, driver, specialists_page_open):\n        page = SpecialistsPage(driver)\n        name_values = page.get_name_values_in_specialist_cards()\n        assert name_values, \"Name values in cards are empty\"\n>       assert name_values in SpecialistsPageData.specialists_names, \\\n            \"The names in specialist cards do not match the valid values\"\nE       AssertionError: The names in specialist cards do not match the valid values\nE       assert ['Login'] in [['Гарбарук Екатерина Сергеевна', 'Прошина Любовь Александровна', 'Березкина Ксения Сергеевна', 'Метельская Наталья Николаевна', 'Королева Инна Васильевна', 'Юлия Кибалова', ...], ['Ekaterina Garbaruk', 'Lubov Proshina', 'Ksenia Berezkina', 'Natalia Metelskaya', 'Inna Koroleva', 'Yulia Kibalova', ...]]\nE        +  where [['Гарбарук Екатерина Сергеевна', 'Прошина Любовь Александровна', 'Березкина Ксения Сергеевна', 'Метельская Наталья Николаевна', 'Королева Инна Васильевна', 'Юлия Кибалова', ...], ['Ekaterina Garbaruk', 'Lubov Proshina', 'Ksenia Berezkina', 'Natalia Metelskaya', 'Inna Koroleva', 'Yulia Kibalova', ...]] = SpecialistsPageData.specialists_names\n\ntests/specialists_page_test.py:116: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1716080824382,
      "stop" : 1716080827943,
      "duration" : 3561
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/",
      "time" : {
        "start" : 1716080824382,
        "stop" : 1716080827943,
        "duration" : 3561
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c66a9497537141d9a42747adef328876\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "specialists_page_open",
    "time" : {
      "start" : 1716080827943,
      "stop" : 1716080829072,
      "duration" : 1129
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/specialists",
      "time" : {
        "start" : 1716080827944,
        "stop" : 1716080829072,
        "duration" : 1128
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check element is visible and clickable: ('id', 'other-menu')",
        "time" : {
          "start" : 1716080827944,
          "stop" : 1716080827980,
          "duration" : 36
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is clickable",
          "time" : {
            "start" : 1716080827961,
            "stop" : 1716080827980,
            "duration" : 19
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable: ('id', 'other-menu')",
            "time" : {
              "start" : 1716080827961,
              "stop" : 1716080827980,
              "duration" : 19
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('id', 'other-menu')"
          } ],
          "stepsCount" : 1,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Check element is visible and clickable: ('id', 'ember7')",
        "time" : {
          "start" : 1716080828009,
          "stop" : 1716080828039,
          "duration" : 30
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is clickable",
          "time" : {
            "start" : 1716080828024,
            "stop" : 1716080828039,
            "duration" : 15
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable: ('id', 'ember7')",
            "time" : {
              "start" : 1716080828024,
              "stop" : 1716080828039,
              "duration" : 15
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('id', 'ember7')"
          } ],
          "stepsCount" : 1,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c66a9497537141d9a42747adef328876\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "stepsCount" : 6,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1716080234080,
      "stop" : 1716080234080,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1716080823693,
      "stop" : 1716080824382,
      "duration" : 689
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: The names in specialist cards do not match the valid values\nassert ['Login'] in [['Гарбарук Екатерина Сергеевна', 'Прошина Любовь Александровна', 'Березкина Ксения Сергеевна', 'Метельская Наталья Николаевна', 'Королева Инна Васильевна', 'Юлия Кибалова', ...], ['Ekaterina Garbaruk', 'Lubov Proshina', 'Ksenia Berezkina', 'Natalia Metelskaya', 'Inna Koroleva', 'Yulia Kibalova', ...]]\n +  where [['Гарбарук Екатерина Сергеевна', 'Прошина Любовь Александровна', 'Березкина Ксения Сергеевна', 'Метельская Наталья Николаевна', 'Королева Инна Васильевна', 'Юлия Кибалова', ...], ['Ekaterina Garbaruk', 'Lubov Proshina', 'Ksenia Berezkina', 'Natalia Metelskaya', 'Inna Koroleva', 'Yulia Kibalova', ...]] = SpecialistsPageData.specialists_names",
    "statusTrace" : "self = <tests.specialists_page_test.TestSpecialistsPage.TestSpecialistCardsText object at 0x7fdb4ba20e60>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c66a9497537141d9a42747adef328876\")>\nspecialists_page_open = None\n\n    @allure.title(\"Verify values of names in specialist cards in the grid\")\n    def test_sp_03_02_verify_name_values_in_cards(self, driver, specialists_page_open):\n        page = SpecialistsPage(driver)\n        name_values = page.get_name_values_in_specialist_cards()\n        assert name_values, \"Name values in cards are empty\"\n>       assert name_values in SpecialistsPageData.specialists_names, \\\n            \"The names in specialist cards do not match the valid values\"\nE       AssertionError: The names in specialist cards do not match the valid values\nE       assert ['Login'] in [['Гарбарук Екатерина Сергеевна', 'Прошина Любовь Александровна', 'Березкина Ксения Сергеевна', 'Метельская Наталья Николаевна', 'Королева Инна Васильевна', 'Юлия Кибалова', ...], ['Ekaterina Garbaruk', 'Lubov Proshina', 'Ksenia Berezkina', 'Natalia Metelskaya', 'Inna Koroleva', 'Yulia Kibalova', ...]]\nE        +  where [['Гарбарук Екатерина Сергеевна', 'Прошина Любовь Александровна', 'Березкина Ксения Сергеевна', 'Метельская Наталья Николаевна', 'Королева Инна Васильевна', 'Юлия Кибалова', ...], ['Ekaterina Garbaruk', 'Lubov Proshina', 'Ksenia Berezkina', 'Natalia Metelskaya', 'Inna Koroleva', 'Yulia Kibalova', ...]] = SpecialistsPageData.specialists_names\n\ntests/specialists_page_test.py:116: AssertionError",
    "steps" : [ {
      "name" : "Get the list of name values in specialist cards on the page",
      "time" : {
        "start" : 1716080829072,
        "stop" : 1716080829092,
        "duration" : 20
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Get the list of names in specialist cards on the page",
        "time" : {
          "start" : 1716080829072,
          "stop" : 1716080829082,
          "duration" : 10
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check elements are present: ('xpath', \"//div[contains(@class, 'mb-4')]\")",
          "time" : {
            "start" : 1716080829073,
            "stop" : 1716080829082,
            "duration" : 9
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "fc4b3952456b7ef5",
      "name" : "Screenshot",
      "source" : "fc4b3952456b7ef5.png",
      "type" : "image/png",
      "size" : 187204
    }, {
      "uid" : "9ffa465c697e4601",
      "name" : "HTML source",
      "source" : "9ffa465c697e4601.html",
      "type" : "text/html",
      "size" : 167513
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1716080829249,
      "stop" : 1716080829442,
      "duration" : 193
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d19b79722aea7daf",
      "name" : "Screenshot 2024-05-19 01:07:09.380126",
      "source" : "d19b79722aea7daf.png",
      "type" : "image/png",
      "size" : 187204
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Specialists Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "specialists_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestSpecialistsPage"
  }, {
    "name" : "host",
    "value" : "fv-az774-776"
  }, {
    "name" : "thread",
    "value" : "2321-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.specialists_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "b92404e5f3bd9a38",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/6//#testresult/b92404e5f3bd9a38",
        "status" : "passed",
        "time" : {
          "start" : 1715994201665,
          "stop" : 1715994201719,
          "duration" : 54
        }
      }, {
        "uid" : "df68c8e2513e703f",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/5//#testresult/df68c8e2513e703f",
        "status" : "passed",
        "time" : {
          "start" : 1715907842865,
          "stop" : 1715907842931,
          "duration" : 66
        }
      }, {
        "uid" : "d870b42e03ab8f44",
        "reportUrl" : "https://lambotik.github.io/auto-tests-python/4//#testresult/d870b42e03ab8f44",
        "status" : "passed",
        "time" : {
          "start" : 1715821320486,
          "stop" : 1715821320544,
          "duration" : 58
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f9a84d93ea44fed1.json",
  "parameterValues" : [ ]
}